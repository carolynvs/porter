pool:
  vmImage: "Ubuntu 16.04"

parameters:
  - name: goVersion
    type: string
    default: "1.13.10"
  - name: registry
    type: string
    default: getporterci
    values:
      - getporter
      - getporterci
      - ghcr.io/getporter
  - name: shouldPublish
    type: boolean
    default: false

stages:
  - stage: Validate
    jobs:
      - job: build
        displayName: "Native Compile"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: make build
            displayName: "Native Build"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Native Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "build-bin"
      - job: xbuild
        displayName: "Cross Compile"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: make xbuild-all
            displayName: "Cross Compile"
          - task: PublishPipelineArtifact@0
            displayName: "Publish Release Binaries"
            inputs:
              targetPath: $(System.DefaultWorkingDirectory)/bin
              archiveFilePatterns: "**"
              artifactName: "xbuild-bin"
      - job: unit_test
        displayName: "Unit Test"
        steps:
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent
            displayName: "Configure Agent"
          - bash: make verify
            displayName: "Verify"
          - bash: make test-unit
            displayName: "Unit Test"
      - job: integration_test
        displayName: "Integration Test"
        dependsOn: build
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download Bin"
            inputs:
              source: current
              artifact: build-bin
              path: bin
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent SetBinExecutable
            displayName: "Configure Agent"
          - bash: ./build/run-integration-tests.sh
            displayName: "Integration Test"
      - job: e2e_test
        displayName: "Run E2E tests on"
        dependsOn: xbuild
        strategy:
          matrix:
            windows:
              poolName: "windows"
              vmImage: ""
            linux:
              poolName: "Azure Pipelines"
              vmImage: "ubuntu-latest"
        pool:
          name: $(poolName)
          vmImage: $(vmImage)
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - task: GoTool@0
            displayName: "Set Go Version"
            inputs:
              version: ${{parameters.goVersion}}
          - script: go run mage.go ConfigureAgent UseXBuildBinaries
            displayName: "Configure Agent"
          - script: mage TestE2E
            displayName: "Run E2E Tests"

  - stage: Publish
    condition: ${{ parameters.shouldPublish }}
    jobs:
      - job: publish_binaries
        steps:
          - task: GoTool@0
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - script: go run mage.go UseXBuildBinaries
            displayName: "Setup Bin"
          - script: |
              export AZURE_STORAGE_CONNECTION_STRING=$(AZURE_STORAGE_CONNECTION_STRING)
              make publish-bin publish-mixins
            displayName: "Publish Porter Binaries"

      - job: publish_docker
        steps:
          - task: GoTool@0
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Cross-Compiled Porter Binaries"
            inputs:
              source: current
              artifact: xbuild-bin
              path: bin
          - script: go run mage.go UseXBuildBinaries
            displayName: "Setup Bin"
          - task: Docker@1
            displayName: Docker Login
            inputs:
              containerRegistryType: Container Registry
              dockerRegistryEndpoint: getporter-registry
              command: login
          - script: REGISTRY=${{parameters.registry}} make publish-images
            displayName: "Publish Docker Images"

      - job: publish_example_bundles
        steps:
          - task: GoTool@0
            inputs:
              version: ${{parameters.goVersion}}
          - task: DownloadPipelineArtifact@2
            displayName: "Download Native Porter Binaries"
            inputs:
              source: current
              artifact: build-bin
              path: bin
          - script: go run mage.go SetBinExecutable
            displayName: "Setup Bin"
          - bash: |
              set -e
              sudo make ajv
              make build-bundle validate-bundle
            displayName: "Validate Examples"
          - task: Docker@1
            displayName: Docker Login
            inputs:
              containerRegistryType: Container Registry
              dockerRegistryEndpoint: getporter-registry
              command: login
          - script: REGISTRY=${{parameters.registry}} make publish-bundle
            displayName: "Publish Example Bundles"
